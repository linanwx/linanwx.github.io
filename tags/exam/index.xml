<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Exam on Nansen Li</title>
        <link>https://nansenli.com/tags/exam/</link>
        <description>Recent content in Exam on Nansen Li</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Nansen Li üåà ÔºàÊùéÊ•†Ê£ÆÔºâ</copyright>
        <lastBuildDate>Sun, 04 May 2025 12:00:00 +0000</lastBuildDate><atom:link href="https://nansenli.com/tags/exam/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Dublin City University MSc in Computing: Secure Software Engineering Exam Cookbook</title>
        <link>https://nansenli.com/post/2025/04/dcu-secure-software-exam-cookbook/</link>
        <pubDate>Sun, 04 May 2025 12:00:00 +0000</pubDate>
        
        <guid>https://nansenli.com/post/2025/04/dcu-secure-software-exam-cookbook/</guid>
        <description>&lt;p&gt;I completed all the exams for the Secure Software Engineering stream of the MSc in Computing at DCU this semester. Here, I&amp;rsquo;d like to share my experience and some practical tips.&lt;/p&gt;
&lt;p&gt;The program consists of 8 modules: 4 in the first semester and 4 in the second. You must pass all exams to graduate, and the overall difficulty is not trivial.&lt;/p&gt;
&lt;p&gt;To pass the exams, the most important points are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Attend classes. Try to attend every lecture. Being present helps reinforce your learning, and sometimes the lecturer will clearly indicate the focus or direction of the exam. For example, this year, a specific type of question was highlighted in class, which was very helpful for exam preparation.&lt;/li&gt;
&lt;li&gt;Practice with recent exam papers. Download past papers from &lt;a class=&#34;link&#34; href=&#34;dcu.guruarchive.com&#34; &gt;dcu.guruarchive.com&lt;/a&gt;. Study the question types carefully. If the module content hasn&amp;rsquo;t changed much, questions from the last two years may not appear again. If there have been changes, the last two years&amp;rsquo; papers are likely to be the main focus. I recommend practicing at least 2 years, up to 5 years of past papers.&lt;/li&gt;
&lt;li&gt;Complete all assignments carefully. Each assignment is directly graded and contributes to your final mark‚Äîtypically 25%. Since assignments are done offline and don&amp;rsquo;t require memorization, you can achieve a high coursework score with effort, which greatly reduces the pressure to pass the final exam.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;exam-overview&#34;&gt;Exam Overview
&lt;/h1&gt;&lt;h2 id=&#34;semester-1-modules&#34;&gt;Semester 1 Modules
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Cryptography and Number Theory&lt;/li&gt;
&lt;li&gt;System Software/BlockChain&lt;/li&gt;
&lt;li&gt;Secure Programming&lt;/li&gt;
&lt;li&gt;Professional &amp;amp; Research Practice&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;semester-2-modules&#34;&gt;Semester 2 Modules
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Formal Programming&lt;/li&gt;
&lt;li&gt;Concurrent Programming&lt;/li&gt;
&lt;li&gt;Software Process Quality&lt;/li&gt;
&lt;li&gt;Network Security&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The first semester is relatively manageable. The key modules are Secure Programming and Cryptography and Number Theory. There is also System Software/BlockChain, depending on the university&amp;rsquo;s arrangement. If it&amp;rsquo;s BlockChain, it&amp;rsquo;s easier; if it&amp;rsquo;s System Software, it&amp;rsquo;s more challenging. Professional &amp;amp; Research Practice is relatively light. Overall, the first semester is less stressful, with two main exam-heavy modules.&lt;/p&gt;
&lt;p&gt;The second semester is more intense. Almost all modules are challenging, and even the slightly easier Software Process Quality is not easy to score high in. The academic pressure is noticeably higher.&lt;/p&gt;
&lt;p&gt;Below are details for each exam.&lt;/p&gt;
&lt;h1 id=&#34;cryptography-and-number-theory&#34;&gt;Cryptography and Number Theory
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first few lectures are manageable, but after hash functions, the difficulty spikes‚Äîespecially in Cryptanalysis and Number Theory. Unfortunately, these tough topics are the main focus of the exam.&lt;/p&gt;
&lt;p&gt;To pass and score well with minimal time investment, I recommend:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Attend all lectures.&lt;/li&gt;
&lt;li&gt;Spend 1 hour previewing before class; for Cryptanalysis and Number Theory, spend 2 hours.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t worry if you don&amp;rsquo;t fully understand the cryptanalysis and number theory parts in class‚Äîjust keep up with the pace.&lt;/li&gt;
&lt;li&gt;Complete the major assignment carefully, usually on linear or differential cryptanalysis. The assignment is always examined in the final. If you didn&amp;rsquo;t do it yourself, the exam will be tough. The assignment is worth 25% and is quite challenging. To get full marks, expect to spend at least 4 days coding and testing. My topic was &lt;strong&gt;Differential Cryptanalysis of Feistel 4&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Practice the past four years&amp;rsquo; papers and make sure you understand any cryptography content you missed in class.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;system-softwareblockchain&#34;&gt;System Software/BlockChain
&lt;/h1&gt;&lt;p&gt;This module depends on the university&amp;rsquo;s arrangement. I took BlockChain.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BlockChain is mainly delivered via video lectures, so you don&amp;rsquo;t need to attend in-person classes, making the first semester lighter.&lt;/p&gt;
&lt;p&gt;Assignments include a report and a group (2-3 people) presentation on cryptography.&lt;/p&gt;
&lt;p&gt;Overall, this module doesn&amp;rsquo;t require much time to understand, and the exam isn&amp;rsquo;t too hard. However, while passing is easy, getting a high mark is tough. To excel, you need to deeply understand the exam content, prepare assignments thoroughly, memorize a lot, and manage your time well in the exam to write as much as possible.&lt;/p&gt;
&lt;p&gt;How to pass:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Memorize questions from the past 4 years. Most are short-answer questions about blockchain, so you can prepare template answers.&lt;/li&gt;
&lt;li&gt;Prepare your presentation and report thoroughly. The report should have some depth.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;secure-programming&#34;&gt;Secure Programming
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is, in my opinion, the most valuable module.&lt;/p&gt;
&lt;p&gt;It covers a wide range of topics from high-level to low-level computing: Linux, operating systems, C programming, reverse engineering, data structures, GDB debugging, and more.&lt;/p&gt;
&lt;p&gt;There are no assignments; instead, there are two in-class tests. Including the final, there are three exams in total.&lt;/p&gt;
&lt;p&gt;The first test is a rehearsal for the final, with similar question types. The second is a practical security attack test, where you must research and code an attack.&lt;/p&gt;
&lt;p&gt;How to pass:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Attend all classes and try to remember everything covered. You need a solid foundation in computer science, especially low-level principles.&lt;/li&gt;
&lt;li&gt;Score well in the in-class tests. The lecturer is excellent and will rehearse key exam topics in advance. All questions are variants of previously tested material, so preparing the revision materials provided is key.&lt;/li&gt;
&lt;li&gt;Practice past papers thoroughly, especially Linux Permissions.&lt;/li&gt;
&lt;li&gt;In the final, you can choose 5 out of 6 questions. You can skip the security attack question (already tested in class and hard to revise), or skip another based on your strengths.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;professional--research-practice&#34;&gt;Professional &amp;amp; Research Practice
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coursework counts for 50%: a literature review, a video presentation, and a paper.&lt;/p&gt;
&lt;p&gt;The exam is also 50%.&lt;/p&gt;
&lt;p&gt;You can attend classes or not; they are mainly for Q&amp;amp;A.&lt;/p&gt;
&lt;p&gt;How to pass:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Take assignments seriously to get a good coursework mark. For high marks, pay attention to formatting in the paper and make the video engaging.&lt;/li&gt;
&lt;li&gt;Memorize the past 3 years&amp;rsquo; exam questions. Even though you can choose which to answer, you still need to prepare all topics.&lt;/li&gt;
&lt;li&gt;Prepare model answers for all past questions. Get a general understanding of the syllabus, then check each exam question and use your materials to generate answers to memorize.&lt;/li&gt;
&lt;li&gt;Class attendance is optional, as it&amp;rsquo;s mainly Q&amp;amp;A. Occasionally, there&amp;rsquo;s info about the practicum or job hunting.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;formal-programming&#34;&gt;Formal Programming
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This module is very challenging, involving complex logical reasoning. Fortunately, the exam is still manageable.&lt;/p&gt;
&lt;p&gt;How to pass:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Attend every class, listen carefully, and try to follow the logic, formulas, and derivations.&lt;/li&gt;
&lt;li&gt;Complete the third week&amp;rsquo;s assignment (Event-B modeling) carefully.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t worry if you don&amp;rsquo;t understand everything in class‚Äîjust make sure you get it during revision, especially the various Laws.&lt;/li&gt;
&lt;li&gt;Before the exam, do the past 3 years&amp;rsquo; papers and make sure you understand everything you missed in class.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;concurrent-programming&#34;&gt;Concurrent Programming
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This module isn&amp;rsquo;t too hard, but covers a lot of content.&lt;/p&gt;
&lt;p&gt;The exam requires a lot of memorization, code snippets, API usage, and design/prototyping.&lt;/p&gt;
&lt;p&gt;How to pass:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Complete all assignments carefully.&lt;/li&gt;
&lt;li&gt;For the exam, practice at least 5 years of past papers. Although you can choose 5 out of 6 questions, the topics vary, so revise all types rather than skipping any.&lt;/li&gt;
&lt;li&gt;Attend every class and try to remember all content, as anything covered could be examined.&lt;/li&gt;
&lt;li&gt;Since the exam involves a lot of memorization, check in class whether the current topic is examinable and remember it if so.&lt;/li&gt;
&lt;li&gt;Build a database of past questions and ask AI if a topic is likely to be examined. If yes, pay close attention in class.&lt;/li&gt;
&lt;li&gt;I highly recommend browsing past papers first to understand the exam focus. Ask AI about trends in the past 3 years. Since this module is mainly about memorization, class absorption is key.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;software-process-quality&#34;&gt;Software Process Quality
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Module difficulty: ‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;li&gt;Exam difficulty: ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This module isn&amp;rsquo;t hard, but the exam covers a wide range of topics.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;When revising, focus first on topics that appear repeatedly in past papers, such as Karnaugh and Clause Coverage. Since the question types vary, even though you can choose 5 out of 6, I still recommend revising all types.&lt;/li&gt;
&lt;li&gt;You can attend classes or self-study.&lt;/li&gt;
&lt;li&gt;Assignments aren&amp;rsquo;t difficult‚Äîchoose suitable topics and you can score well.&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
