<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ARM on Nansen Li&#39;s Blog
李楠森的博客
</title>
        <link>https://nansenli.com/tags/arm/</link>
        <description>Recent content in ARM on Nansen Li&#39;s Blog
李楠森的博客
</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Nansen Li 🌈 （李楠森）</copyright>
        <lastBuildDate>Thu, 30 Jun 2016 20:00:00 +0000</lastBuildDate><atom:link href="https://nansenli.com/tags/arm/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>ARM GIC-400 Registers</title>
        <link>https://nansenli.com/post/kokeyuan/arm-gic-400-registers/</link>
        <pubDate>Thu, 30 Jun 2016 20:00:00 +0000</pubDate>
        
        <guid>https://nansenli.com/post/kokeyuan/arm-gic-400-registers/</guid>
        <description>&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction
&lt;/h2&gt;&lt;p&gt;GIC-400 is used for interrupt control. The A20 chip on the Cubieboard2 uses this controller.&lt;/p&gt;
&lt;p&gt;The GIC controller address on Cubieboard2 is 0x01C80000&amp;mdash;0x01C87FFF, with a length equal to the GIC-400 register length.&lt;/p&gt;
&lt;p&gt;The specific details are shown below.&lt;/p&gt;
&lt;p&gt;With 0x01C80000 as the starting address, the following offsets are provided:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Offset Address&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0x0000-0x0FFF&lt;/td&gt;
&lt;td&gt;Reserved, unused&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x1000-0x1FFF&lt;/td&gt;
&lt;td&gt;Distributor, useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x2000-0x3FFF&lt;/td&gt;
&lt;td&gt;CPU interfaces, useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x4000-0x4FFF&lt;/td&gt;
&lt;td&gt;Virtual interface control block, for the processor that is performing the access&lt;!-- raw HTML omitted --&gt;Virtualization-related, unused&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x5000-0x5FFF&lt;/td&gt;
&lt;td&gt;Virtual interface control block, for the processor selected by address bits [11:9]&lt;!-- raw HTML omitted --&gt;Virtualization-related, unused&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x5000-0x51FF&lt;!-- raw HTML omitted --&gt;0x5200-0x53FF&lt;!-- raw HTML omitted --&gt;&amp;hellip;&lt;!-- raw HTML omitted --&gt;0x5E00-0x5FFF&lt;/td&gt;
&lt;td&gt;Alias for Processor 0&lt;!-- raw HTML omitted --&gt;Alias for Processor 1&lt;!-- raw HTML omitted --&gt;&amp;hellip;&lt;!-- raw HTML omitted --&gt;Alias for Processor 7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x6000-0x7FFF&lt;/td&gt;
&lt;td&gt;Virtual CPU interfaces&lt;!-- raw HTML omitted --&gt;Virtualization-related, unused&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The commonly used parts are the second and third blocks in the diagram, the 0x1000~0x3fff configuration.&lt;/p&gt;
&lt;h2 id=&#34;2-distributor&#34;&gt;2. Distributor
&lt;/h2&gt;&lt;p&gt;The address of this distributor register block = GIC controller address + 0x1000. Remember this offset when using it. Starting from here, the following registers are available:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Offset&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Access&lt;/th&gt;
&lt;th&gt;Reset Value&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0x000&lt;/td&gt;
&lt;td&gt;GICD_CTLR&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000[c]&lt;/td&gt;
&lt;td&gt;Distributor Control Register&lt;!-- raw HTML omitted --&gt;Write 1 to enable the controller, required&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x004&lt;/td&gt;
&lt;td&gt;GICD_TYPER&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;Configuration-dependent[d]&lt;/td&gt;
&lt;td&gt;Interrupt Controller Type Register&lt;!-- raw HTML omitted --&gt;Used to check the total number of interrupt lines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x008&lt;/td&gt;
&lt;td&gt;GICD_IIDR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x0200143B&lt;/td&gt;
&lt;td&gt;Distributor Implementer Identification Register, GICD_IIDR&lt;!-- raw HTML omitted --&gt;Contains version information, not particularly useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x080-0x0BC&lt;/td&gt;
&lt;td&gt;GICD_IGROUPRn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Group Registers[e]&lt;!-- raw HTML omitted --&gt;A bitmap that controls whether interrupts belong to Group A or B&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x100&lt;/td&gt;
&lt;td&gt;GICD_ISENABLERn&lt;/td&gt;
&lt;td&gt;RW[f]&lt;/td&gt;
&lt;td&gt;SGIs and PPIs:0x0000FFFF[g]&lt;/td&gt;
&lt;td&gt;Interrupt Set-Enable Registers&lt;!-- raw HTML omitted --&gt;A bitmap for enabling individual interrupts, write 1 to enable. Useful&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x104-0x13C&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;SPIs: 0x00000000&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x180&lt;/td&gt;
&lt;td&gt;GICD_ICENABLERn&lt;/td&gt;
&lt;td&gt;RW[f]&lt;/td&gt;
&lt;td&gt;0x0000FFFF[g]&lt;/td&gt;
&lt;td&gt;Interrupt Clear-Enable Registers&lt;!-- raw HTML omitted --&gt;Similar to the previous register, but opposite function, write 1 to disable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x184-0x1BC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x200-0x23C&lt;/td&gt;
&lt;td&gt;GICD_ISPENDRn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Set-Pending Registers&lt;!-- raw HTML omitted --&gt;Pending bitmap, write 1 to enter pending state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x280-0x2BC&lt;/td&gt;
&lt;td&gt;GICD_ICPENDRn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Clear-Pending Registers&lt;!-- raw HTML omitted --&gt;Similar to above, write 1 for opposite effect, prevents pending state&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x300-0x33C&lt;/td&gt;
&lt;td&gt;GICD_ISACTIVERn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Set-Active Registers&lt;!-- raw HTML omitted --&gt;Bitmap, write 1 to activate an interrupt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x380-0x3BC&lt;/td&gt;
&lt;td&gt;GICD_ICACTIVERn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Clear-Active Registers&lt;!-- raw HTML omitted --&gt;Write 1 to deactivate an interrupt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x400-0x5FC&lt;/td&gt;
&lt;td&gt;GICD_IPRIORITYRn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Priority Registers&lt;!-- raw HTML omitted --&gt;Stores priority levels for each interrupt, 8 bits per interrupt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x800-0x81C&lt;/td&gt;
&lt;td&gt;GICD_ITARGETSRn&lt;/td&gt;
&lt;td&gt;RO[h]&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Interrupt Processor Targets Registers[i]&lt;!-- raw HTML omitted --&gt;Determines which processor an interrupt should be sent to for handling&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x820-0x9FC&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC00&lt;/td&gt;
&lt;td&gt;GICD_ICFGRn&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;SGIs: 0xAAAAAAAA&lt;/td&gt;
&lt;td&gt;Interrupt Configuration Registers, GICD_ICFGRn&lt;!-- raw HTML omitted --&gt;Configures whether interrupts are level-triggered or falling-edge triggered&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC04&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;PPIs: 0x55540000&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xC08-0xC7C&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;RW[j]&lt;/td&gt;
&lt;td&gt;SPIs: 0x55555555&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xD00&lt;/td&gt;
&lt;td&gt;GICD_PPISR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Private Peripheral Interrupt Status Register, GICD_PPISR&lt;!-- raw HTML omitted --&gt;Generally not used&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xD04-0xD3C&lt;/td&gt;
&lt;td&gt;GICD_SPISRn&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Shared Peripheral Interrupt Status Registers, GICD_SPISRn&lt;!-- raw HTML omitted --&gt;Not used&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xF00&lt;/td&gt;
&lt;td&gt;GICD_SGIR&lt;/td&gt;
&lt;td&gt;WO&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Software Generated Interrupt Register&lt;!-- raw HTML omitted --&gt;Controls software interrupts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xF10-0xF1C&lt;/td&gt;
&lt;td&gt;GICD_CPENDSGIRn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;SGI Clear-Pending Registers&lt;!-- raw HTML omitted --&gt;Pending bits for software interrupts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xF20-0xF2C&lt;/td&gt;
&lt;td&gt;GICD_SPENDSGIRn&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;SGI Set-Pending Registers&lt;!-- raw HTML omitted --&gt;Similar to above, but writing 1 stops pending&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFD0&lt;/td&gt;
&lt;td&gt;GICD_PIDR4&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000004&lt;/td&gt;
&lt;td&gt;Peripheral ID 4 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFD4&lt;/td&gt;
&lt;td&gt;GICD_PIDR5&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Peripheral ID 5 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFD8&lt;/td&gt;
&lt;td&gt;GICD_PIDR6&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Peripheral ID 6 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFDC&lt;/td&gt;
&lt;td&gt;GICD_PIDR7&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Peripheral ID 7 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFE0&lt;/td&gt;
&lt;td&gt;GICD_PIDR0&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000090&lt;/td&gt;
&lt;td&gt;Peripheral ID 0 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFE4&lt;/td&gt;
&lt;td&gt;GICD_PIDR1&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000000B4&lt;/td&gt;
&lt;td&gt;Peripheral ID 1 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFE8&lt;/td&gt;
&lt;td&gt;GICD_PIDR2&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x0000002B&lt;/td&gt;
&lt;td&gt;Peripheral ID 2 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFEC&lt;/td&gt;
&lt;td&gt;GICD_PIDR3&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Peripheral ID 3 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFF0&lt;/td&gt;
&lt;td&gt;GICD_CIDR0&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x0000000D&lt;/td&gt;
&lt;td&gt;Component ID 0 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFF4&lt;/td&gt;
&lt;td&gt;GICD_CIDR1&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000000F0&lt;/td&gt;
&lt;td&gt;Component ID 1 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFF8&lt;/td&gt;
&lt;td&gt;GICD_CIDR2&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x00000005&lt;/td&gt;
&lt;td&gt;Component ID 2 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0xFFC&lt;/td&gt;
&lt;td&gt;GICD_CIDR3&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000000B1&lt;/td&gt;
&lt;td&gt;Component ID 3 Register&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;3-cpu-interface&#34;&gt;3. CPU Interface
&lt;/h2&gt;&lt;p&gt;Starting address offset is 0x2000&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Offset&lt;/th&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Reset&lt;/th&gt;
&lt;th&gt;Description[a]&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0x0000&lt;/td&gt;
&lt;td&gt;GICC_CTLR&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;CPU Interface Control Register&lt;!-- raw HTML omitted --&gt;Enable bit. Write 1 to enable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0004&lt;/td&gt;
&lt;td&gt;GICC_PMR&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Interrupt Priority Mask Register&lt;!-- raw HTML omitted --&gt;Limits minimum interrupt priority, interrupts with values above this cannot trigger. Best to set this high&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0008&lt;/td&gt;
&lt;td&gt;GICC_BPR&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000002[b]&lt;/td&gt;
&lt;td&gt;Binary Point Register&lt;!-- raw HTML omitted --&gt;The minimum value of the Binary Point Register depends on which security-banked copy is considered:&lt;!-- raw HTML omitted --&gt;0x2 Secure copy&lt;!-- raw HTML omitted --&gt;0x3 Non-secure copy&lt;!-- raw HTML omitted --&gt;Priority grouping&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x000C&lt;/td&gt;
&lt;td&gt;GICC_IAR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000003FF&lt;/td&gt;
&lt;td&gt;Interrupt Acknowledge Register&lt;!-- raw HTML omitted --&gt;Read-only, interrupt ID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0010&lt;/td&gt;
&lt;td&gt;GICC_EOIR&lt;/td&gt;
&lt;td&gt;WO&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;End of Interrupt Register&lt;!-- raw HTML omitted --&gt;Write to inform the CPU that interrupt processing is complete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0014&lt;/td&gt;
&lt;td&gt;GICC_RPR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000000FF&lt;/td&gt;
&lt;td&gt;Running Priority Register&lt;!-- raw HTML omitted --&gt;Current interrupt priority&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0018&lt;/td&gt;
&lt;td&gt;GICC_HPPIR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000003FF&lt;/td&gt;
&lt;td&gt;Highest Priority Pending Interrupt Register [c]&lt;!-- raw HTML omitted --&gt;Highest priority interrupt number and its pending value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x001C&lt;/td&gt;
&lt;td&gt;GICC_ABPR&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000003&lt;/td&gt;
&lt;td&gt;Aliased Binary Point Register[d]&lt;!-- raw HTML omitted --&gt;The minimum value of the Aliased Binary Point Register is 0x3.&lt;!-- raw HTML omitted --&gt;Alias register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0020&lt;/td&gt;
&lt;td&gt;GICC_AIAR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000003FF&lt;/td&gt;
&lt;td&gt;Aliased Interrupt Acknowledge Register[d]&lt;!-- raw HTML omitted --&gt;Alias register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0024&lt;/td&gt;
&lt;td&gt;GICC_AEOIR&lt;/td&gt;
&lt;td&gt;WO&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Aliased End of Interrupt Register[d]&lt;!-- raw HTML omitted --&gt;Alias register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x0028&lt;/td&gt;
&lt;td&gt;GICC_AHPPIR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x000003FF&lt;/td&gt;
&lt;td&gt;Aliased Highest Priority Pending Interrupt Register[c][d]&lt;!-- raw HTML omitted --&gt;Alias register&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x00D0&lt;/td&gt;
&lt;td&gt;GICC_APR0&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Active Priority Register&lt;!-- raw HTML omitted --&gt;Used for saving and restoring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x00E0&lt;/td&gt;
&lt;td&gt;GICC_NSAPR0&lt;/td&gt;
&lt;td&gt;RW&lt;/td&gt;
&lt;td&gt;0x00000000&lt;/td&gt;
&lt;td&gt;Non-Secure Active Priority Register[d]&lt;!-- raw HTML omitted --&gt;Used for saving and restoring&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x00FC&lt;/td&gt;
&lt;td&gt;GICC_IIDR&lt;/td&gt;
&lt;td&gt;RO&lt;/td&gt;
&lt;td&gt;0x0202143B&lt;/td&gt;
&lt;td&gt;CPU Interface Identification Register, GICC_IIDR&lt;!-- raw HTML omitted --&gt;Contains version information&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0x1000&lt;/td&gt;
&lt;td&gt;GICC_DIR&lt;/td&gt;
&lt;td&gt;WO&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Deactivate Interrupt Register&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        
    </channel>
</rss>
