<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>K8s on Nansen Li</title>
        <link>https://nansenli.com/categories/k8s/</link>
        <description>Recent content in K8s on Nansen Li</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Nansen Li（李楠森）</copyright>
        <lastBuildDate>Sun, 20 Jun 2021 12:21:00 +0000</lastBuildDate><atom:link href="https://nansenli.com/categories/k8s/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Classic Kubernetes Installation Process</title>
        <link>https://nansenli.com/post/jianshu/k8s/k8s%E7%BB%8F%E5%85%B8%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</link>
        <pubDate>Sun, 20 Jun 2021 12:21:00 +0000</pubDate>
        
        <guid>https://nansenli.com/post/jianshu/k8s/k8s%E7%BB%8F%E5%85%B8%E5%AE%89%E8%A3%85%E6%B5%81%E7%A8%8B/</guid>
        <description>&lt;h1 id=&#34;run-on-all-machines&#34;&gt;Run on All Machines
&lt;/h1&gt;&lt;p&gt;All machines are running Debian.
First, install Docker:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; sudo apt-get update
 sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

echo \
  &amp;#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable&amp;#34; | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null

sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

sudo mkdir /etc/docker
cat &amp;lt;&amp;lt;EOF | sudo tee /etc/docker/daemon.json
{
  &amp;#34;exec-opts&amp;#34;: [&amp;#34;native.cgroupdriver=systemd&amp;#34;],
  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
  &amp;#34;log-opts&amp;#34;: {
    &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;
  },
  &amp;#34;storage-driver&amp;#34;: &amp;#34;overlay2&amp;#34;
}
EOF


sudo usermod -aG docker ${USER}

sudo systemctl restart docker

sudo su ${USER}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, running &lt;code&gt;docker ps -a&lt;/code&gt; should work without errors, indicating Docker was installed successfully.&lt;/p&gt;
&lt;p&gt;Next, install Kubernetes components:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat &amp;lt;&amp;lt;EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat &amp;lt;&amp;lt;EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sudo sysctl --system

sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl

sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo &amp;#34;deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main&amp;#34; | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;run-on-the-master-node&#34;&gt;Run on the Master Node
&lt;/h1&gt;&lt;p&gt;Initialize the control plane:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo kubeadm init --apiserver-advertise-address masterip --control-plane-endpoint masterdns --pod-network-cidr 10.244.0.0/16
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Save the last part of the output for later use, including instructions on how to configure .kube and the join command for nodes. Follow the instructions to configure the .kube file.&lt;/p&gt;
&lt;p&gt;Then initialize the network plugin:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
kubectl apply -f kube-flannel.yml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Check if pods are running properly:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl get pods -A
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On another node, install Kubernetes components, then run the join command. This command is printed at the end of the kubeadm init process.&lt;/p&gt;
&lt;p&gt;Afterwards, check if the pods are running properly.&lt;/p&gt;
&lt;p&gt;Download the dashboard:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml -o dashboard.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Edit dashboard.yaml:
Add nodePort: 31001 below port 8443, and change the type to NodePort above it. Find the namespace= line and add a line below it: - &amp;ndash;token-ttl=43200
For details, refer to:
&lt;a class=&#34;link&#34; href=&#34;https://www.huaweicloud.com/articles/dc1dcb0c48cc785a9193c9ce709c8b35.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.huaweicloud.com/articles/dc1dcb0c48cc785a9193c9ce709c8b35.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Create an admin role:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl create -f https://raw.githubusercontent.com/rootsongjc/kubernetes-handbook/master/manifests/dashboard-1.7.1/admin-role.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apply the pod:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl apply -f dashboard.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Check the port:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo lsof -i:31001 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Get the token:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep admin-token | awk &amp;#39;{print $1}&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Visit https://masterip:31001 and enter &amp;rsquo;thisisunsafe&amp;rsquo; in Chrome, then input the token.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload-images.jianshu.io/upload_images/4388248-218ae55dccdf4314.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;dashboard&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Solving Incorrect Network Card IP Issues When Building Cross-Provider Kubernetes Clusters on Tencent Cloud</title>
        <link>https://nansenli.com/post/jianshu/k8s/%E8%A7%A3%E5%86%B3%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B7%A8%E8%BF%90%E8%90%A5%E5%95%86%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4%E7%BD%91%E5%8D%A1ip%E4%B8%8D%E6%AD%A3%E7%A1%AE%E7%9A%84%E9%97%AE%E9%A2%98/</link>
        <pubDate>Sun, 22 Jul 2018 13:40:00 +0000</pubDate>
        
        <guid>https://nansenli.com/post/jianshu/k8s/%E8%A7%A3%E5%86%B3%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B7%A8%E8%BF%90%E8%90%A5%E5%95%86%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4%E7%BD%91%E5%8D%A1ip%E4%B8%8D%E6%AD%A3%E7%A1%AE%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;p&gt;Kubernetes requires fully connected networks for all nodes, so each node should have an accessible IP address. Although each node has a public IP, Tencent Cloud machines don&amp;rsquo;t show this IP on the network card. This causes nodes to use their network card IP when joining the cluster, making it impossible for other nodes to find them using this IP.&lt;/p&gt;
&lt;p&gt;To make the IP visible on the network card, you need to enable Tencent Cloud&amp;rsquo;s EIP direct pass-through feature. Note that the official script has issues with Debian 10 and doesn&amp;rsquo;t properly auto-start. The following changes are required:&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;/etc/rc.d/rc.local&lt;/code&gt; to the final line of &lt;code&gt;/etc/rc.local&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Although Tencent Cloud&amp;rsquo;s Debian 10 will start &lt;code&gt;/etc/rc.local&lt;/code&gt; at boot, it won&amp;rsquo;t start &lt;code&gt;/etc/rc.d/rc.local&lt;/code&gt;, but the provided script writes to the latter.&lt;/p&gt;
&lt;p&gt;Reference documentation: &lt;a class=&#34;link&#34; href=&#34;https://cloud.tencent.com/document/product/1199/41709&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cloud.tencent.com/document/product/1199/41709&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
